from django.conf.urls import patterns, include, url
from django.conf import settings

# Uncomment the next two lines to enable the admin:
# from django.contrib import admin
# admin.autodiscover()

urlpatterns = patterns('',
    # Examples:
    # url(r'^$', 'my_acis.views.home', name='home'),
    # url(r'^my_acis/', include('my_acis.foo.urls')),
    (r'^media/$', 'my_acis.views.media'),
    (r'^$', 'my_acis.views.home_view'),
    (r'^documentation/$', 'documentation.views.home'),
    (r'^documentation/acis/$', 'documentation.views.acis'),
    (r'^documentation/acis/grid_acis/$', 'documentation.views.grid_acis'),
    (r'^documentation/acis/subdaily_acis/$', 'documentation.views.subdaily_acis'),
    (r'^documentation/scenic/$', 'documentation.views.scenic'),
    (r'^documentation/scenic/large_data_requests/$', 'documentation.views.large_data_requests'),
    (r'^wrcc_meta/$', 'wrcc_meta.views.home_view'),
    (r'^wrcc_meta/by_state/$', 'wrcc_meta.views.by_state'),
    (r'^wrcc_meta/by_name/$', 'wrcc_meta.views.by_name'),
    (r'^wrcc_meta/by_name_and_state/$', 'wrcc_meta.views.by_name_and_state'),
    (r'^wrcc_meta/by_id/$', 'wrcc_meta.views.by_id'),
    (r'^wrcc_meta/by_ucan_id/$', 'wrcc_meta.views.by_ucan_id'),
    (r'^wrcc_meta/by_location/$', 'wrcc_meta.views.by_location'),
    (r'^wrcc_meta/by_nina/$', 'wrcc_meta.views.by_location'),
    (r'^wrcc_meta/station_detail/$', 'wrcc_meta.views.station_detail'),
    (r'^wrcc_meta/station_tables/$', 'wrcc_meta.views.station_tables'),
    (r'^wrcc_meta/station_tables_nina/$', 'wrcc_meta.views.station_tables_nina'),
    (r'^wrcc_meta/(?P<tbl_name>[Station][Location|AltName|TimeZone|ClimDiv|County|Digital|Equipment|Maintenance|Physical|Photo|Contact]*)/$', 'wrcc_meta.views.station_tables_merge'),
    (r'^wrcc_meta/sub_tables/$', 'wrcc_meta.views.sub_tables'),
    #(r'^wrcc_meta/(?P<tbl_name>[Station][Variable|Network|Digital]*)/$', 'wrcc_meta.views.station_tables_add'),
    #(r'^wrcc_meta/(?P<tbl_name>[Station][Location|Network|Subnetwork|AltName|TimeZone|ClimDiv|County|Digital|Equipment|Maintenance|Physical|Photo|Contact]*)/(?P<tbl_id>\d+)/$', 'wrcc_meta.views.sub_tables'),
    #(r'^wrcc_meta/Station/(?P<tbl_id>\d+)/$', 'wrcc_meta.views.sub_tables'),
    (r'^wrcc_meta/add/$', 'wrcc_meta.views.station_tables_add'),
    (r'^wrcc_meta/merge/$', 'wrcc_meta.views.station_tables_merge'),
    (r'^wrcc_apps/$', 'wrcc_apps.views.home_view'),
    #sub process apps: FIX ME: Need to be converted to module approach
    #module approach apps
    (r'^wrcc_apps/cemp/$', 'wrcc_apps.views.cemp'),
    (r'^wrcc_apps/nevcan/$', 'wrcc_apps.views.nevcan'),
    (r'^wrcc_apps/(?P<app_name>Sodsum)/$', 'wrcc_apps.views.sodsum'),
    (r'^wrcc_apps/(?P<app_name>[Soddyrec|Soddynorm|Soddd|Sodpad|Sodsumm|Sodrun|Sodrunr|Sodpct|Sodthr|Sodxtrmts|Sodpiii]*)/$', 'wrcc_apps.views.sods'),
    (r'^wrcc_apps/(?P<app_name>[Sodmonline|Sodmonlinemy|Sodcnv]*)/$', 'wrcc_apps.views.sodlist'),
    (r'^wrcc_apps/Sodlist/$', 'wrcc_apps.views.sodlist_new'),
    #Redirect from swcke
    (r'^swcke/home/$', 'scenic.views.swcke_home'),
    (r'^swcke/\w+/$', 'scenic.views.swcke_home'),
    (r'^swcke/\w+/\w+/$', 'scenic.views.swcke_home'),
    (r'^swcke/\w+/\w+/\w+/$', 'scenic.views.swcke_home'),
    (r'^scenic/test/$', 'scenic.views.test'),
    (r'^scenic/main/$', 'scenic.views.main'),
    (r'^scenic/main_map/$', 'scenic.views.main_map'),
    (r'^scenic/resources/$', 'scenic.views.resources'),
    (r'^scenic/resources/gridded_data_resources/$', 'scenic.views.resources_grid'),
    (r'^scenic/resources/station_data_resources/$', 'scenic.views.resources_station'),
    (r'^scenic/home/$', 'scenic.views.home'),
    (r'^scenic/$', 'scenic.views.home'),
    (r'^scenic/about_us/$', 'scenic.views.about_us'),
    (r'^scenic/contact_us/$', 'scenic.views.contact_us'),
    (r'^scenic/who_we_are/$', 'scenic.views.who_we_are'),
    (r'^scenic/what_we_do/$', 'scenic.views.what_we_do'),
    (r'^scenic/dashboard/$', 'scenic.views.dashboard'),
    (r'^scenic/help/$', 'scenic.views.help'),
    (r'^scenic/download/$', 'scenic.views.download'),
    (r'^scenic/feedback/$', 'scenic.views.feedback'),
    (r'^scenic/data/$', 'scenic.views.data_home'),
    (r'^scenic/data/sw_networks/$', 'scenic.views.sw_networks'),
    (r'^scenic/data/(?P<stn_id>\d+)/$', 'scenic.views.data_home'),
    (r'^scenic/data/station/$', 'scenic.views.data_station'),
    (r'^scenic/data/station/(?P<stn_id>\d+)(\&P<start_date>[\d{8,10}|por])(\&P<end_date>[\d{8,10}|por)(\&P<elements>[^,]+)$', 'scenic.views.data_station'),
    (r'^scenic/data/gridded/$', 'scenic.views.data_gridded'),
    (r'^scenic/data/gridded/(?P<start_date>[\d{8,10}|por])(\&P<end_date>[\d{8,10}|por)(\&P<elements>[^,]+)(\&P<grid>[^,]+)(\&P<bounding_box>[^,]+)(\&P<summary>[^,]+)(\&P<temporal_resolution>[^,]+)$', 'scenic.views.data_gridded'),
    (r'^scenic/data/gridded/(?P<start_date>[\d{8,10}|por])(\&P<end_date>[\d{8,10}|por)(\&P<elements>[^,]+)(\&P<grid>[^,]+)(\&P<state>[^,]+)(\&P<summary>[^,]+)(\&P<temporal_resolution>[^,]+)$', 'scenic.views.data_gridded'),
    (r'^scenic/data/gridded/(\?P<start_date>[\d{8,10}|por])(\&P<end_date>[\d{8,10}|por)(\&P<elements>[^,]+)(\&P<grid>[^,]+)(\&P<loc>[^,]+)(\&P<summary>[^,]+)(\&P<temporal_resolution>[^,]+)$', 'scenic.views.data_gridded'),
    (r'^scenic/apps/$', 'scenic.views.apps_home'),
    (r'^scenic/apps/(?P<stn_id>\d+)/$', 'scenic.views.apps_home'),
    #(r'^scenic/apps/scenic_station_apps/$', 'scenic.views.scenic_station_apps'),
    #(r'^scenic/apps/scenic_station_apps/(?P<stn_id>\d+)(\&P<start_date>[\d{8,10}|por])(\&P<end_date>[\d{8,10}|por)(\&P<elements>[^,]+)$', 'scenic.views.scenic_station_apps'),
    (r'^scenic/apps/station/$', 'scenic.views.apps_station'),
    #(r'^scenic/apps/station/(?P<stn_id>\d+)/$', 'scenic.views.apps_station'),
    (r'^scenic/apps/station/(?P<stn_id>\d+)(\&P<start_date>[\d{8,10}|por])(\&P<end_date>[\d{8,10}|por)(\&P<elements>[^,]+)$', 'scenic.views.scenic_station_apps'),
    (r'^scenic/apps/station/station_finder/$', 'scenic.views.station_locator_app'),
    (r'^scenic/apps/station/station_locator/$', 'scenic.views.station_locator_app'),
    (r'^scenic/apps/station/metagraph/$', 'scenic.views.metagraph'),
    (r'^scenic/apps/station/metagraph/(?P<stn_id>\d+)$', 'scenic.views.metagraph'),
    (r'^scenic/apps/station/sodsumm/$', 'scenic.views.sodsumm'),
    (r'^scenic/apps/station/sodsumm/(?P<stn_id>[^,]+)(\&P<start_date>[\d{4}])(\&P<end_date>[\d{4})(\&P<element>[^,]+)$', 'scenic.views.sodsumm'),
    (r'^scenic/apps/station/sodxtrmts/$', 'scenic.views.sodxtrmts',{'app_type':'station'}),
    (r'^scenic/apps/station/sodxtrmts/(?P<stn_id>[^,]+)(\&P<start_date>[\d{4}])(\&P<end_date>[\d{4})(\&P<element>[^,]+)$', 'scenic.views.sodxtrmts',{'app_type':'station'}),
    (r'^scenic/apps/station/monthly_aves/$', 'scenic.views.monthly_aves'),
    #(r'^scenic/apps/monthly_aves/(?P<stn_id>[^,]+)(\&P<start_date>[\d{8,10}|por])(\&P<end_date>[\d{8,10}|por)(\&P<elements>[^,]+)$', 'scenic.views.monthly_aves'),
    (r'^scenic/apps/gridded/$', 'scenic.views.apps_gridded'),
    (r'^scenic/apps/gridded/grid_point_time_series/$', 'scenic.views.grid_point_time_series'),
    (r'^scenic/apps/gridded/grid_point_time_series/(?P<lat>\-?(0|1-9+)\.?\d+)(\&P<lon>\-?(0|1-9+)\.?\d+)$', 'scenic.views.grid_point_time_series'),
    (r'^scenic/apps/gridded/temporal_summary/$', 'scenic.views.temporal_summary'),
    (r'^scenic/apps/gridded/temporal_summary/(?P<start_date>[\d{8,10}])(\&P<end_date>[\d{8,10})(\&P<element>[^,]+)(\&P<grid>[^,]+)(\&P<state>[^,]+)$', 'scenic.views.temporal_summary'),
    (r'^scenic/apps/gridded/temporal_summary/(\?P<start_date>[\d{8,10}])(\&P<end_date>[\d{8,10})(\&P<element>[^,]+)(\&P<grid>[^,]+)(\&P<bounding_box>[^,]+)$', 'scenic.views.temporal_summary'),
     (r'^scenic/apps/gridded/spatial_summary/$', 'scenic.views.spatial_summary'),
    (r'^scenic/apps/gridded/spatial_summary/(?P<start_date>[\d{8,10}])(\&P<end_date>[\d{8,10})(\&P<element>[^,]+)(\&P<grid>[^,]+)(\&P<state>[^,]+)$', 'scenic.views.spatial_summary'),
    (r'^scenic/apps/gridded/spatial_summary/(\?P<start_date>[\d{8,10}])(\&P<end_date>[\d{8,10})(\&P<element>[^,]+)(\&P<grid>[^,]+)(\&P<bounding_box>[^,]+)$', 'scenic.views.spatial_summary'),
    (r'^scenic/apps/gridded/clim_prob_maps/$', 'scenic.views.clim_prob_maps'),
    (r'^scenic/apps/gridded/clim_prob_maps/(?P<start_date>[\d{8,10}])(\&P<end_date>[\d{8,10})(\&P<element>[^,]+)(\&P<grid>[^,]+)(\&P<state>[^,]+)$', 'scenic.views.clim_prob_maps'),
    (r'^scenic/apps/gridded/clim_prob_maps/(\?P<start_date>[\d{8,10}])(\&P<end_date>[\d{8,10})(\&P<element>[^,]+)(\&P<grid>[^,]+)(\&P<bounding_box>[^,]+)$', 'scenic.views.clim_prob_maps'),
    (r'^scenic/apps/gridded/sodxtrmts/$', 'scenic.views.sodxtrmts',{'app_type':'grid'}),
    (r'^scenic/apps/gridded/sodxtrmts/(?P<lat>\-?(0|1-9+)\.?\d+)(\&P<lon>\-?(0|1-9+)\.?\d+)(\&P<start_date>[\d{4}])(\&P<end_date>[\d{4})(\&P<element>[^,]+)$', 'scenic.views.sodxtrmts',{'app_type':'grid'}),
    (r'^scenic/apps/gis/$', 'scenic.views.apps_gis'),
    # Uncomment the admin/doc line below to enable admin documentation:
    # url(r'^admin/doc/', include('django.contrib.admindocs.urls')),

    # Uncomment the next line to enable the admin:
    # url(r'^admin/', include(admin.site.urls)),
)

if settings.DEBUG:
    urlpatterns += patterns('',
        url(r'^media/(?P<path>.*)$', 'django.views.static.serve', {
            'document_root': settings.MEDIA_ROOT, 'show_indexes':True
        }),
   )
